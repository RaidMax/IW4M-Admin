name: '$(Date:yyyy.M.d)$(Rev:.r)'

pr: none

pool:
  vmImage: 'windows-2022'

variables:
  buildPlatform: 'Any CPU'
  outputFolder: '$(Build.ArtifactStagingDirectory)\Publish\$(buildConfiguration)'
  releaseType: verified
  buildConfiguration: Stable
  isPreRelease: false

jobs:
  - job: Build_Pack
    steps:
      - task: UseDotNet@2
        displayName: 'Install .NET Core 6 SDK'
        inputs:
          packageType: 'sdk'
          version: '6.0.x'
          includePreviewVersions: true

      - task: NuGetToolInstaller@1

      - task: PowerShell@2
        displayName: 'Setup Build configuration'
        condition: or(eq(variables['Build.SourceBranch'], 'refs/heads/release/pre'), eq(variables['Build.SourceBranch'], 'refs/heads/develop'), eq(variables['Build.SourceBranch'], 'refs/heads/chore/nuget-pipeline'))
        inputs:
          targetType: 'inline'
          script: |
            echo '##vso[task.setvariable variable=releaseType]prerelease'
            echo '##vso[task.setvariable variable=buildConfiguration]Prerelease'
            echo '##vso[task.setvariable variable=isPreRelease]true'
          failOnStderr: true
          
      - task: DotNetCoreCLI@2
        displayName: 'Build Data'
        inputs:
          command: 'build'
          projects: '**/Data.csproj'
          arguments: '-c $(buildConfiguration)'
          
      - task: DotNetCoreCLI@2
        displayName: 'Build SLC'
        inputs:
          command: 'build'
          projects: '**/SharedLibraryCore.csproj'
          arguments: '-c $(buildConfiguration) /p:Version=$(Build.BuildNumber)'
          
      - task: DotNetCoreCLI@2
        displayName: 'Pack SLC'
        inputs:
          command: 'pack'
          packagesToPack: '**/SharedLibraryCore.csproj'
          versioningScheme: 'byBuildNumber'
          
      - task: PublishPipelineArtifact@1
        displayName: 'Publish nuget package artifact'
        inputs:
          targetPath: '$(Build.Repository.LocalPath)/SharedLibraryCore/bin/$(buildConfiguration)/RaidMax.IW4MAdmin.SharedLibraryCore.$(Build.BuildNumber).nupkg'
          artifact: 'SharedLibraryCore.$(Build.BuildNumber).nupkg'
          publishLocation: 'pipeline'
